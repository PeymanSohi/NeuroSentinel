version: '3.8'

services:
  server:
    build: ./server
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/neurosentinel
      - REDIS_URL=redis://redis:6379/0
    networks:
      - nsnet

  agent:
    build: ./agent
    depends_on:
      - server
    environment:
      - SEND_MODE=websocket
      - WS_URL=ws://server:8000/ws/events
    networks:
      - nsnet

  ml_core:
    build:
      context: ./ml_core
    image: neurosentinel-ml-core
    volumes:
      - ./ml_core:/app
      - ./data:/data
    environment:
      - PYTHONUNBUFFERED=1
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "9000"]
    ports:
      - "9000:9000"

  ml_core_test:
    build:
      context: ./ml_core
    image: neurosentinel-ml-core
    command: ["python", "test_models.py"]
    volumes:
      - ./ml_core:/app

  ml_core_train:
    build:
      context: ./ml_core
    image: neurosentinel-ml-core
    command: ["python", "train_models.py", "--data", "/data/processed/training_data.json", "--validation", "/data/processed/validation_data.json", "--model-type", "isolation_forest", "--config", "/data/configs/isolation_forest_config.json"]
    volumes:
      - ./ml_core:/app
      - ./data:/data

  dashboard:
    build: ./dashboard
    ports:
      - "5173:5173"
    networks:
      - nsnet

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: neurosentinel
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - nsnet

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - nsnet

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - nsnet

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
      - dashboard
    networks:
      - nsnet

networks:
  nsnet:
    driver: bridge

volumes:
  pgdata:
